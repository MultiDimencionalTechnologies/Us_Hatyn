/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public partial class DependencyProperty : BaseComponent {

  internal DependencyProperty(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.DependencyProperty_SWIGUpcast(cPtr), cMemoryOwn) {
  }

  internal static HandleRef getCPtr(DependencyProperty obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected DependencyProperty() {
  }

  public Type OwnerType {
    get {
      return Noesis.Extend.GetNativeTypeInfo(GetOwnerTypeHelper()).Type;
    }
  }
  
  public Type PropertyType {
    get {
      return Noesis.Extend.GetNativeTypeInfo(GetPropertyTypeHelper()).Type;
    }
  }
  
  public Noesis.PropertyMetadata Metadata {
    get {
      return GetMetadataHelper(GetOwnerTypeHelper());
    }
  }

  public Noesis.PropertyMetadata GetMetadata(Type forType) {
    return GetMetadataHelper(Noesis.Extend.GetNativeType(forType));
  }

  public static object UnsetValue {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.DependencyProperty_UnsetValue_get();
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return Noesis.Extend.Unbox(Noesis.Extend.GetProxy(cPtr, false));
    }
  }

  public string Name {
    get {
      string ret = NoesisGUI_PINVOKE.DependencyProperty_Name_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public bool ReadOnly {
    get {
      bool ret = NoesisGUI_PINVOKE.DependencyProperty_ReadOnly_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.DependencyProperty_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  private IntPtr GetOwnerTypeHelper() {
    IntPtr ret = NoesisGUI_PINVOKE.DependencyProperty_GetOwnerTypeHelper(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  private IntPtr GetPropertyTypeHelper() {
    IntPtr ret = NoesisGUI_PINVOKE.DependencyProperty_GetPropertyTypeHelper(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  private PropertyMetadata GetMetadataHelper(IntPtr type) {
    IntPtr cPtr = NoesisGUI_PINVOKE.DependencyProperty_GetMetadataHelper(swigCPtr, type);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return Noesis.Extend.GetProxy(cPtr, false) as PropertyMetadata;
  }

}

}

