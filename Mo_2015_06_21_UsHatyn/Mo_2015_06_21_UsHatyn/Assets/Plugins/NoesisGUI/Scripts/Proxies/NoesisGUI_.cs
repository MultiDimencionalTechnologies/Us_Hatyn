/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class NoesisGUI_ {
  public static IntPtr Bool_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Bool_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Float_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Float_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Int_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Int_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr UInt_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.UInt_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Short_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Short_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr UShort_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.UShort_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr String_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.String_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Color_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Color_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Point_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Point_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Rect_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Rect_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Size_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Size_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Thickness_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Thickness_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr CornerRadius_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.CornerRadius_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Bool_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Bool_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Float_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Float_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Int_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Int_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_UInt_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_UInt_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Short_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Short_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_UShort_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_UShort_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_String_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_String_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Color_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Color_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Point_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Point_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Rect_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Rect_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Size_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Size_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Thickness_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Thickness_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_CornerRadius_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_CornerRadius_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static bool Unbox_Bool(BaseComponent val) {
    bool ret = NoesisGUI_PINVOKE.Unbox_Bool(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static float Unbox_Float(BaseComponent val) {
    float ret = NoesisGUI_PINVOKE.Unbox_Float(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static int Unbox_Int(BaseComponent val) {
    int ret = NoesisGUI_PINVOKE.Unbox_Int(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static uint Unbox_UInt(BaseComponent val) {
    uint ret = NoesisGUI_PINVOKE.Unbox_UInt(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static short Unbox_Short(BaseComponent val) {
    short ret = NoesisGUI_PINVOKE.Unbox_Short(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static ushort Unbox_UShort(BaseComponent val) {
    ushort ret = NoesisGUI_PINVOKE.Unbox_UShort(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static string Unbox_String(BaseComponent val) {
    string ret = NoesisGUI_PINVOKE.Unbox_String(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Color Unbox_Color(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Color(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Color>(ret);
    }
    else {
      return new Color();
    }
  }

  public static Point Unbox_Point(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Point(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Point>(ret);
    }
    else {
      return new Point();
    }
  }

  public static Rect Unbox_Rect(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Rect(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Rect>(ret);
    }
    else {
      return new Rect();
    }
  }

  public static Size Unbox_Size(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Size(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Size>(ret);
    }
    else {
      return new Size();
    }
  }

  public static Thickness Unbox_Thickness(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Thickness(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Thickness>(ret);
    }
    else {
      return new Thickness();
    }
  }

  public static CornerRadius Unbox_CornerRadius(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_CornerRadius(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<CornerRadius>(ret);
    }
    else {
      return new CornerRadius();
    }
  }

  public static BaseComponent Box_Bool(bool val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Bool(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Float(float val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Float(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Int(int val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Int(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_UInt(uint val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_UInt(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Short(short val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Short(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_UShort(ushort val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_UShort(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_String(string val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_String(val != null ? val : string.Empty);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Color(Color val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Color(ref val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Point(Point val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Point(ref val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Rect(Rect val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Rect(ref val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Size(Size val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Size(ref val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Thickness(Thickness val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Thickness(ref val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_CornerRadius(CornerRadius val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_CornerRadius(ref val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr NullableBool_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableBool_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableBool_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableBool_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<bool> Unbox_NullableBool(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableBool(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableBool>(ret);
    }
    else {
      return new System.Nullable<bool>();
    }
  }

  public static BaseComponent Box_NullableBool(System.Nullable<bool> val) {
    NullableBool tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableBool(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableInt16_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableInt16_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableInt16_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableInt16_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<short> Unbox_NullableInt16(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableInt16(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableInt16>(ret);
    }
    else {
      return new System.Nullable<short>();
    }
  }

  public static BaseComponent Box_NullableInt16(System.Nullable<short> val) {
    NullableInt16 tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableInt16(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableInt32_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableInt32_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableInt32_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableInt32_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<int> Unbox_NullableInt32(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableInt32(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableInt32>(ret);
    }
    else {
      return new System.Nullable<int>();
    }
  }

  public static BaseComponent Box_NullableInt32(System.Nullable<int> val) {
    NullableInt32 tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableInt32(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableFloat_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableFloat_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableFloat_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableFloat_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<float> Unbox_NullableFloat(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableFloat(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableFloat>(ret);
    }
    else {
      return new System.Nullable<float>();
    }
  }

  public static BaseComponent Box_NullableFloat(System.Nullable<float> val) {
    NullableFloat tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableFloat(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableColor_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableColor_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableColor_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableColor_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<Color> Unbox_NullableColor(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableColor(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableColor>(ret);
    }
    else {
      return new System.Nullable<Color>();
    }
  }

  public static BaseComponent Box_NullableColor(System.Nullable<Color> val) {
    NullableColor tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableColor(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullablePoint_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullablePoint_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullablePoint_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullablePoint_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<Point> Unbox_NullablePoint(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullablePoint(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullablePoint>(ret);
    }
    else {
      return new System.Nullable<Point>();
    }
  }

  public static BaseComponent Box_NullablePoint(System.Nullable<Point> val) {
    NullablePoint tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullablePoint(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableRect_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableRect_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableRect_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableRect_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<Rect> Unbox_NullableRect(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableRect(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableRect>(ret);
    }
    else {
      return new System.Nullable<Rect>();
    }
  }

  public static BaseComponent Box_NullableRect(System.Nullable<Rect> val) {
    NullableRect tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableRect(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableSize_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableSize_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableSize_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableSize_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<Size> Unbox_NullableSize(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableSize(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableSize>(ret);
    }
    else {
      return new System.Nullable<Size>();
    }
  }

  public static BaseComponent Box_NullableSize(System.Nullable<Size> val) {
    NullableSize tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableSize(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableThickness_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableThickness_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableThickness_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableThickness_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<Thickness> Unbox_NullableThickness(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableThickness(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableThickness>(ret);
    }
    else {
      return new System.Nullable<Thickness>();
    }
  }

  public static BaseComponent Box_NullableThickness(System.Nullable<Thickness> val) {
    NullableThickness tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableThickness(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableCornerRadius_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableCornerRadius_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableCornerRadius_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableCornerRadius_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<CornerRadius> Unbox_NullableCornerRadius(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableCornerRadius(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableCornerRadius>(ret);
    }
    else {
      return new System.Nullable<CornerRadius>();
    }
  }

  public static BaseComponent Box_NullableCornerRadius(System.Nullable<CornerRadius> val) {
    NullableCornerRadius tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableCornerRadius(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableTimeSpan_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableTimeSpan_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableTimeSpan_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableTimeSpan_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<System.TimeSpan> Unbox_NullableTimeSpan(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableTimeSpan(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableTimeSpan>(ret);
    }
    else {
      return new System.Nullable<System.TimeSpan>();
    }
  }

  public static BaseComponent Box_NullableTimeSpan(System.Nullable<System.TimeSpan> val) {
    NullableTimeSpan tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableTimeSpan(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableDuration_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableDuration_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableDuration_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableDuration_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<Duration> Unbox_NullableDuration(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableDuration(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableDuration>(ret);
    }
    else {
      return new System.Nullable<Duration>();
    }
  }

  public static BaseComponent Box_NullableDuration(System.Nullable<Duration> val) {
    NullableDuration tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableDuration(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr NullableKeyTime_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.NullableKeyTime_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_NullableKeyTime_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_NullableKeyTime_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static System.Nullable<KeyTime> Unbox_NullableKeyTime(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_NullableKeyTime(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<NullableKeyTime>(ret);
    }
    else {
      return new System.Nullable<KeyTime>();
    }
  }

  public static BaseComponent Box_NullableKeyTime(System.Nullable<KeyTime> val) {
    NullableKeyTime tempval = val;
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Box_NullableKeyTime(ref tempval);
      BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    }
  }

  public static IntPtr UpdateSourceTrigger_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.UpdateSourceTrigger_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_UpdateSourceTrigger_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_UpdateSourceTrigger_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static UpdateSourceTrigger Unbox_UpdateSourceTrigger(BaseComponent val) {
    UpdateSourceTrigger ret = (UpdateSourceTrigger)NoesisGUI_PINVOKE.Unbox_UpdateSourceTrigger(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_UpdateSourceTrigger(UpdateSourceTrigger val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_UpdateSourceTrigger((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr AlignmentX_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.AlignmentX_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_AlignmentX_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_AlignmentX_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static AlignmentX Unbox_AlignmentX(BaseComponent val) {
    AlignmentX ret = (AlignmentX)NoesisGUI_PINVOKE.Unbox_AlignmentX(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_AlignmentX(AlignmentX val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_AlignmentX((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr AlignmentY_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.AlignmentY_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_AlignmentY_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_AlignmentY_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static AlignmentY Unbox_AlignmentY(BaseComponent val) {
    AlignmentY ret = (AlignmentY)NoesisGUI_PINVOKE.Unbox_AlignmentY(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_AlignmentY(AlignmentY val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_AlignmentY((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr AutoToolTipPlacement_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.AutoToolTipPlacement_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_AutoToolTipPlacement_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_AutoToolTipPlacement_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static AutoToolTipPlacement Unbox_AutoToolTipPlacement(BaseComponent val) {
    AutoToolTipPlacement ret = (AutoToolTipPlacement)NoesisGUI_PINVOKE.Unbox_AutoToolTipPlacement(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_AutoToolTipPlacement(AutoToolTipPlacement val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_AutoToolTipPlacement((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr BindingMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.BindingMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_BindingMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_BindingMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BindingMode Unbox_BindingMode(BaseComponent val) {
    BindingMode ret = (BindingMode)NoesisGUI_PINVOKE.Unbox_BindingMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_BindingMode(BindingMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_BindingMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr BitmapScalingMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.BitmapScalingMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_BitmapScalingMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_BitmapScalingMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BitmapScalingMode Unbox_BitmapScalingMode(BaseComponent val) {
    BitmapScalingMode ret = (BitmapScalingMode)NoesisGUI_PINVOKE.Unbox_BitmapScalingMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_BitmapScalingMode(BitmapScalingMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_BitmapScalingMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr BrushMappingMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.BrushMappingMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_BrushMappingMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_BrushMappingMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BrushMappingMode Unbox_BrushMappingMode(BaseComponent val) {
    BrushMappingMode ret = (BrushMappingMode)NoesisGUI_PINVOKE.Unbox_BrushMappingMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_BrushMappingMode(BrushMappingMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_BrushMappingMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr CharacterCasing_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.CharacterCasing_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_CharacterCasing_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_CharacterCasing_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static CharacterCasing Unbox_CharacterCasing(BaseComponent val) {
    CharacterCasing ret = (CharacterCasing)NoesisGUI_PINVOKE.Unbox_CharacterCasing(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_CharacterCasing(CharacterCasing val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_CharacterCasing((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr ClickMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ClickMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_ClickMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_ClickMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static ClickMode Unbox_ClickMode(BaseComponent val) {
    ClickMode ret = (ClickMode)NoesisGUI_PINVOKE.Unbox_ClickMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_ClickMode(ClickMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_ClickMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr ColorInterpolationMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ColorInterpolationMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_ColorInterpolationMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_ColorInterpolationMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static ColorInterpolationMode Unbox_ColorInterpolationMode(BaseComponent val) {
    ColorInterpolationMode ret = (ColorInterpolationMode)NoesisGUI_PINVOKE.Unbox_ColorInterpolationMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_ColorInterpolationMode(ColorInterpolationMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_ColorInterpolationMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Dock_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Dock_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Dock_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Dock_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Dock Unbox_Dock(BaseComponent val) {
    Dock ret = (Dock)NoesisGUI_PINVOKE.Unbox_Dock(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Dock(Dock val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Dock((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr ExpandDirection_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ExpandDirection_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_ExpandDirection_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_ExpandDirection_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static ExpandDirection Unbox_ExpandDirection(BaseComponent val) {
    ExpandDirection ret = (ExpandDirection)NoesisGUI_PINVOKE.Unbox_ExpandDirection(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_ExpandDirection(ExpandDirection val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_ExpandDirection((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr FillRule_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.FillRule_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_FillRule_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_FillRule_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static FillRule Unbox_FillRule(BaseComponent val) {
    FillRule ret = (FillRule)NoesisGUI_PINVOKE.Unbox_FillRule(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_FillRule(FillRule val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_FillRule((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr FlowDirection_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.FlowDirection_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_FlowDirection_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_FlowDirection_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static FlowDirection Unbox_FlowDirection(BaseComponent val) {
    FlowDirection ret = (FlowDirection)NoesisGUI_PINVOKE.Unbox_FlowDirection(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_FlowDirection(FlowDirection val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_FlowDirection((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr FontStretch_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.FontStretch_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_FontStretch_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_FontStretch_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static FontStretch Unbox_FontStretch(BaseComponent val) {
    FontStretch ret = (FontStretch)NoesisGUI_PINVOKE.Unbox_FontStretch(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_FontStretch(FontStretch val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_FontStretch((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr FontStyle_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.FontStyle_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_FontStyle_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_FontStyle_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static FontStyle Unbox_FontStyle(BaseComponent val) {
    FontStyle ret = (FontStyle)NoesisGUI_PINVOKE.Unbox_FontStyle(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_FontStyle(FontStyle val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_FontStyle((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr FontWeight_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.FontWeight_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_FontWeight_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_FontWeight_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static FontWeight Unbox_FontWeight(BaseComponent val) {
    FontWeight ret = (FontWeight)NoesisGUI_PINVOKE.Unbox_FontWeight(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_FontWeight(FontWeight val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_FontWeight((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GeometryCombineMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.GeometryCombineMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_GeometryCombineMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_GeometryCombineMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static GeometryCombineMode Unbox_GeometryCombineMode(BaseComponent val) {
    GeometryCombineMode ret = (GeometryCombineMode)NoesisGUI_PINVOKE.Unbox_GeometryCombineMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_GeometryCombineMode(GeometryCombineMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_GeometryCombineMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GradientSpreadMethod_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.GradientSpreadMethod_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_GradientSpreadMethod_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_GradientSpreadMethod_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static GradientSpreadMethod Unbox_GradientSpreadMethod(BaseComponent val) {
    GradientSpreadMethod ret = (GradientSpreadMethod)NoesisGUI_PINVOKE.Unbox_GradientSpreadMethod(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_GradientSpreadMethod(GradientSpreadMethod val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_GradientSpreadMethod((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr HorizontalAlignment_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.HorizontalAlignment_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_HorizontalAlignment_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_HorizontalAlignment_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static HorizontalAlignment Unbox_HorizontalAlignment(BaseComponent val) {
    HorizontalAlignment ret = (HorizontalAlignment)NoesisGUI_PINVOKE.Unbox_HorizontalAlignment(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_HorizontalAlignment(HorizontalAlignment val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_HorizontalAlignment((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr KeyboardNavigationMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.KeyboardNavigationMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_KeyboardNavigationMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_KeyboardNavigationMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static KeyboardNavigationMode Unbox_KeyboardNavigationMode(BaseComponent val) {
    KeyboardNavigationMode ret = (KeyboardNavigationMode)NoesisGUI_PINVOKE.Unbox_KeyboardNavigationMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_KeyboardNavigationMode(KeyboardNavigationMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_KeyboardNavigationMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr LineStackingStrategy_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.LineStackingStrategy_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_LineStackingStrategy_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_LineStackingStrategy_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static LineStackingStrategy Unbox_LineStackingStrategy(BaseComponent val) {
    LineStackingStrategy ret = (LineStackingStrategy)NoesisGUI_PINVOKE.Unbox_LineStackingStrategy(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_LineStackingStrategy(LineStackingStrategy val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_LineStackingStrategy((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr ListSortDirection_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ListSortDirection_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_ListSortDirection_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_ListSortDirection_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static ListSortDirection Unbox_ListSortDirection(BaseComponent val) {
    ListSortDirection ret = (ListSortDirection)NoesisGUI_PINVOKE.Unbox_ListSortDirection(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_ListSortDirection(ListSortDirection val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_ListSortDirection((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr MenuItemRole_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.MenuItemRole_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_MenuItemRole_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_MenuItemRole_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static MenuItemRole Unbox_MenuItemRole(BaseComponent val) {
    MenuItemRole ret = (MenuItemRole)NoesisGUI_PINVOKE.Unbox_MenuItemRole(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_MenuItemRole(MenuItemRole val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_MenuItemRole((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Orientation_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Orientation_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Orientation_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Orientation_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Orientation Unbox_Orientation(BaseComponent val) {
    Orientation ret = (Orientation)NoesisGUI_PINVOKE.Unbox_Orientation(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Orientation(Orientation val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Orientation((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr OverflowMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.OverflowMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_OverflowMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_OverflowMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static OverflowMode Unbox_OverflowMode(BaseComponent val) {
    OverflowMode ret = (OverflowMode)NoesisGUI_PINVOKE.Unbox_OverflowMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_OverflowMode(OverflowMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_OverflowMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr PenLineCap_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.PenLineCap_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_PenLineCap_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_PenLineCap_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static PenLineCap Unbox_PenLineCap(BaseComponent val) {
    PenLineCap ret = (PenLineCap)NoesisGUI_PINVOKE.Unbox_PenLineCap(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_PenLineCap(PenLineCap val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_PenLineCap((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr PenLineJoin_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.PenLineJoin_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_PenLineJoin_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_PenLineJoin_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static PenLineJoin Unbox_PenLineJoin(BaseComponent val) {
    PenLineJoin ret = (PenLineJoin)NoesisGUI_PINVOKE.Unbox_PenLineJoin(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_PenLineJoin(PenLineJoin val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_PenLineJoin((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr PlacementMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.PlacementMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_PlacementMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_PlacementMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static PlacementMode Unbox_PlacementMode(BaseComponent val) {
    PlacementMode ret = (PlacementMode)NoesisGUI_PINVOKE.Unbox_PlacementMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_PlacementMode(PlacementMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_PlacementMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr PopupAnimation_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.PopupAnimation_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_PopupAnimation_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_PopupAnimation_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static PopupAnimation Unbox_PopupAnimation(BaseComponent val) {
    PopupAnimation ret = (PopupAnimation)NoesisGUI_PINVOKE.Unbox_PopupAnimation(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_PopupAnimation(PopupAnimation val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_PopupAnimation((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr RelativeSourceMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.RelativeSourceMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_RelativeSourceMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_RelativeSourceMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static RelativeSourceMode Unbox_RelativeSourceMode(BaseComponent val) {
    RelativeSourceMode ret = (RelativeSourceMode)NoesisGUI_PINVOKE.Unbox_RelativeSourceMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_RelativeSourceMode(RelativeSourceMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_RelativeSourceMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr SelectionMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.SelectionMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_SelectionMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_SelectionMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static SelectionMode Unbox_SelectionMode(BaseComponent val) {
    SelectionMode ret = (SelectionMode)NoesisGUI_PINVOKE.Unbox_SelectionMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_SelectionMode(SelectionMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_SelectionMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr SizeToContent_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.SizeToContent_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_SizeToContent_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_SizeToContent_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static SizeToContent Unbox_SizeToContent(BaseComponent val) {
    SizeToContent ret = (SizeToContent)NoesisGUI_PINVOKE.Unbox_SizeToContent(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_SizeToContent(SizeToContent val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_SizeToContent((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr ScrollBarVisibility_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ScrollBarVisibility_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_ScrollBarVisibility_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_ScrollBarVisibility_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static ScrollBarVisibility Unbox_ScrollBarVisibility(BaseComponent val) {
    ScrollBarVisibility ret = (ScrollBarVisibility)NoesisGUI_PINVOKE.Unbox_ScrollBarVisibility(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_ScrollBarVisibility(ScrollBarVisibility val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_ScrollBarVisibility((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Stretch_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Stretch_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Stretch_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Stretch_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Stretch Unbox_Stretch(BaseComponent val) {
    Stretch ret = (Stretch)NoesisGUI_PINVOKE.Unbox_Stretch(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Stretch(Stretch val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Stretch((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr StretchDirection_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.StretchDirection_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_StretchDirection_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_StretchDirection_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static StretchDirection Unbox_StretchDirection(BaseComponent val) {
    StretchDirection ret = (StretchDirection)NoesisGUI_PINVOKE.Unbox_StretchDirection(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_StretchDirection(StretchDirection val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_StretchDirection((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr TextAlignment_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.TextAlignment_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_TextAlignment_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_TextAlignment_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static TextAlignment Unbox_TextAlignment(BaseComponent val) {
    TextAlignment ret = (TextAlignment)NoesisGUI_PINVOKE.Unbox_TextAlignment(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_TextAlignment(TextAlignment val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_TextAlignment((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr TextTrimming_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.TextTrimming_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_TextTrimming_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_TextTrimming_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static TextTrimming Unbox_TextTrimming(BaseComponent val) {
    TextTrimming ret = (TextTrimming)NoesisGUI_PINVOKE.Unbox_TextTrimming(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_TextTrimming(TextTrimming val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_TextTrimming((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr TextWrapping_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.TextWrapping_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_TextWrapping_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_TextWrapping_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static TextWrapping Unbox_TextWrapping(BaseComponent val) {
    TextWrapping ret = (TextWrapping)NoesisGUI_PINVOKE.Unbox_TextWrapping(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_TextWrapping(TextWrapping val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_TextWrapping((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr TickBarPlacement_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.TickBarPlacement_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_TickBarPlacement_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_TickBarPlacement_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static TickBarPlacement Unbox_TickBarPlacement(BaseComponent val) {
    TickBarPlacement ret = (TickBarPlacement)NoesisGUI_PINVOKE.Unbox_TickBarPlacement(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_TickBarPlacement(TickBarPlacement val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_TickBarPlacement((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr TickPlacement_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.TickPlacement_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_TickPlacement_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_TickPlacement_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static TickPlacement Unbox_TickPlacement(BaseComponent val) {
    TickPlacement ret = (TickPlacement)NoesisGUI_PINVOKE.Unbox_TickPlacement(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_TickPlacement(TickPlacement val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_TickPlacement((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr TileMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.TileMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_TileMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_TileMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static TileMode Unbox_TileMode(BaseComponent val) {
    TileMode ret = (TileMode)NoesisGUI_PINVOKE.Unbox_TileMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_TileMode(TileMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_TileMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr VerticalAlignment_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.VerticalAlignment_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_VerticalAlignment_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_VerticalAlignment_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static VerticalAlignment Unbox_VerticalAlignment(BaseComponent val) {
    VerticalAlignment ret = (VerticalAlignment)NoesisGUI_PINVOKE.Unbox_VerticalAlignment(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_VerticalAlignment(VerticalAlignment val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_VerticalAlignment((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Visibility_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Visibility_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_Visibility_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_Visibility_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Visibility Unbox_Visibility(BaseComponent val) {
    Visibility ret = (Visibility)NoesisGUI_PINVOKE.Unbox_Visibility(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Visibility(Visibility val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Visibility((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr TransformIdentity_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.TransformIdentity_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr ProjectionIdentity_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ProjectionIdentity_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr RootVisual_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.RootVisual_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr PanningMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.PanningMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_PanningMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_PanningMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static PanningMode Unbox_PanningMode(BaseComponent val) {
    PanningMode ret = (PanningMode)NoesisGUI_PINVOKE.Unbox_PanningMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_PanningMode(PanningMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_PanningMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr TextBoxView_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.TextBoxView_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Caret_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Caret_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr HandoffBehavior_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.HandoffBehavior_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_HandoffBehavior_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_HandoffBehavior_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static HandoffBehavior Unbox_HandoffBehavior(BaseComponent val) {
    HandoffBehavior ret = (HandoffBehavior)NoesisGUI_PINVOKE.Unbox_HandoffBehavior(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_HandoffBehavior(HandoffBehavior val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_HandoffBehavior((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr ClockState_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ClockState_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_ClockState_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_ClockState_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static ClockState Unbox_ClockState(BaseComponent val) {
    ClockState ret = (ClockState)NoesisGUI_PINVOKE.Unbox_ClockState(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_ClockState(ClockState val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_ClockState((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr FillBehavior_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.FillBehavior_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_FillBehavior_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_FillBehavior_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static FillBehavior Unbox_FillBehavior(BaseComponent val) {
    FillBehavior ret = (FillBehavior)NoesisGUI_PINVOKE.Unbox_FillBehavior(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_FillBehavior(FillBehavior val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_FillBehavior((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr SlipBehavior_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.SlipBehavior_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_SlipBehavior_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_SlipBehavior_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static SlipBehavior Unbox_SlipBehavior(BaseComponent val) {
    SlipBehavior ret = (SlipBehavior)NoesisGUI_PINVOKE.Unbox_SlipBehavior(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_SlipBehavior(SlipBehavior val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_SlipBehavior((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr EasingMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.EasingMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_EasingMode_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_EasingMode_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static EasingMode Unbox_EasingMode(BaseComponent val) {
    EasingMode ret = (EasingMode)NoesisGUI_PINVOKE.Unbox_EasingMode(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_EasingMode(EasingMode val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_EasingMode((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GridViewColumnHeaderRole_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.GridViewColumnHeaderRole_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr Boxed_GridViewColumnHeaderRole_GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Boxed_GridViewColumnHeaderRole_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static GridViewColumnHeaderRole Unbox_GridViewColumnHeaderRole(BaseComponent val) {
    GridViewColumnHeaderRole ret = (GridViewColumnHeaderRole)NoesisGUI_PINVOKE.Unbox_GridViewColumnHeaderRole(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_GridViewColumnHeaderRole(GridViewColumnHeaderRole val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_GridViewColumnHeaderRole((int)val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

